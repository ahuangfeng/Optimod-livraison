package lhexanome.optimodlivraison.ui.panel;

import lhexanome.optimodlivraison.ui.controller.actions.MainControllerInterface;

import javax.swing.*;
import java.awt.*;

public class MainPanel extends AbstractPanel {
    private JPanel contentPane;
    private JPanel wrapperPanel;
    private JPanel roadMapPanel;

    public MainPanel(MainControllerInterface controller, JPanel roadMapPanel) {
        super(controller);
        this.roadMapPanel = roadMapPanel;
        setup();
    }

    @Override
    public void setup() {
        wrapperPanel.add(roadMapPanel);
    }

    @Override
    public Container getContentPane() {
        return contentPane;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridBagLayout());
        wrapperPanel = new JPanel();
        wrapperPanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0.8;
        gbc.weighty = 0.8;
        gbc.fill = GridBagConstraints.BOTH;
        contentPane.add(wrapperPanel, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 0.2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        contentPane.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weighty = 0.2;
        gbc.fill = GridBagConstraints.VERTICAL;
        contentPane.add(spacer2, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
