package lhexanome.optimodlivraison.ui.view;

import lhexanome.optimodlivraison.platform.models.DeliveryOrder;
import lhexanome.optimodlivraison.platform.models.RoadMap;
import lhexanome.optimodlivraison.platform.models.Tour;
import lhexanome.optimodlivraison.ui.controller.Controller;
import lhexanome.optimodlivraison.ui.panel.RoadMapViewPanel;

import javax.swing.*;
import java.awt.*;

public class OrderEditorView {
    private Controller controller;
    private JPanel roadMapViewPanel;

    public OrderEditorView(Controller controller) {
        this.controller = controller;
    }

    public JPanel getMainPanel() {
        return roadMapViewPanel;
    }


    public void setRoadMap(RoadMap map) {
        ((RoadMapViewPanel) roadMapViewPanel).setRoadMap(map);
    }

    public void setDeliveryOrder(DeliveryOrder deliveryOrder) {
        ((RoadMapViewPanel) roadMapViewPanel).setDeliveryOrder(deliveryOrder);
    }

    public void setTour(Tour tour) {
        ((RoadMapViewPanel) roadMapViewPanel).setTour(tour);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        roadMapViewPanel = new RoadMapViewPanel();
        roadMapViewPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(roadMapViewPanel, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
